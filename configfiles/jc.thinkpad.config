# Makefile.in for ZEFR
# Simply substitute what you need here for compilation. It is suggested that 
# you end all directory paths with a forward slash (/) to avoid issues with 
# whitespace in the Makefile.
#
# Notes: 
# - This code requires an OpenMP aware C++ compiler. 
# - If using a multithreaded BLAS, like OpenBLAS, you should force it to run
#   single threaded, as it will cause performance issues otherwise. For example, 
#   using OpenBLAS, you can export the following environment variable:
#   	export OPENBLAS_NUM_THREADS=1

# Target Architecture (CPU or GPU).
ARCH = GPU

#Using OpenMP (YES or NO)
OPENMP = NO

# Use MPI (YES or NO)
MPI = YES

# MPI library is CUDA-aware? (YES or NO)
CUDA_AWARE = NO

# Use GiMMiK kernels? (slow to compile) (YES or NO)
GIMMIK = YES

# Turn verbose compilation warnings on/off (YES or NO)
WARNINGS = NO

# Set debug level - 1: -g,-O3; 2: -g,-O0; 0: Turn off -g, use -Ofast
DEBUG_LEVEL = 1

# MPI include directory
MPI_INC_DIR   = /opt/OpenMPI-3.1.0/include/
MPI_LIB_DIR   = /opt/OpenMPI-3.1.0/lib/
METIS_INC_DIR = $(WORK)/local/include
METIS_LIB_DIR = $(WORK)/local/lib

# BLAS Type and Path (STANDARD, OPENBLAS, or ATLAS)
BLAS = OPENBLAS
BLAS_LIB_DIR = /usr/lib/
BLAS_INC_DIR = /usr/include/

# CUDA Path
CUDA_LIB_DIR = /usr/lib/x86_64-linux-gnu/cuda/
CUDA_INC_DIR = /usr/include/
CU = nvcc
SM = KEPLER

# HDF5 Paths
HDF5_INC_DIR = /usr/include/hdf5/serial/
HDF5_LIB_DIR = /usr/lib/x86_64-linux-gnu/hdf5/serial/ 

# TIOGA Paths
TIOGA_INC_DIR = /home/jacob/Codes/tioga/include/
TIOGA_LIB_DIR = /home/jacob/Codes/tioga/bin/

# Python / SWIG directories
# For Python3:
PYTHON_INC_DIR = /usr/include/python3.5m/
MPI4PY_INC_DIR = /usr/local/lib/python3.5/dist-packages/mpi4py/include
NUMPY_INC_DIR = /usr/local/lib/python3.5/dist-packages/numpy/core/include
SWIG_BIN = /usr/bin/
