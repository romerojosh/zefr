# Geometry:
nDims    3
overset  true
meshfile P3/hex16.pyfrm
overset_grids  hex10_in.pyfrm  P3/hex16_out.pyfrm

# Boundary Conditions
mesh_bound  periodic  periodic
mesh_bound  overset   overset

# Solver:
order    3
equation EulerNS    (AdvDiff, EulerNS)
viscous  1
motion   1
spt_type Legendre

# Timestepping:
n_steps   5000
dt_scheme LSRK      (Euler, RK44, RK54)
dt_type   0         (0 = Supplied, 1 = Global, 2 = Local)
dt        0.0015
res_tol   1e-12

# Restarting
restart  0
restart_type 1
restart_case movetest
restart_iter 5000

# Adaptive time-stepping variables
safety_factor  .85
max_factor  2
min_factor  .2
err_atol  1e-6
err_rtol  1e-6

# Reporting:
# Note: You can suppress output by setting freq to zero. 
#output_prefix  overtest
output_prefix  movetest
write_freq     100
write_pyfr     0
write_paraview 1
plot_surfaces  0
plot_overset   0
report_freq    50
res_type       1
force_freq     0
error_freq     0
nQpts1D        10
plot_surfaces  0

# ====================================================
# Moving-Grid Parameters
# ====================================================
# 4: Figure-8-ish periodic motion
# For 'Ping-Pong' Taylor-Green: inner box [-.4*pi, +.4*pi]
# outer box [-pi, pi], so max range of motion is .6*pi
motion_type  4
moveAx  1.884955
moveAy  0.9424777
moveAz  1.884955

# For 'Ping-Pong' Taylor-Green: do 10 complete periods
# of motion within time range of interest (~169s)
moveFx  .0591607978
moveFy  .1183215957
moveFz  .0591607978

# Riemann Solver:
fconv_type Rusanov
fvisc_type LDG
rus_k      0.0
ldg_b      0.5
ldg_tau    0.1

# Equation Specific Parameters:
ic_type    1     (0 = Uniform, 1 = Functional (defined in funcs.cpp))
test_case  4     (2 = Couette, 4 = Taylor-Green)

# Euler/Navier-Stokes
gamma    1.4
prandtl  0.72

# Navier-Stokes specific
disable_nondim 1
fix_vis  1
mach_fs  0.1
Re_fs    1600
L_fs     1
rho_fs   1
P_fs     1.0
v_mag_fs .118321595661992
