# =============================================================
# Mesh Options
# =============================================================
# Geometry:
nDims    3
meshfile sphere_hex.coarse.msh
overset  true
# Tiny grids for debugging
#overset_grids  sphere_hex.coarse.msh  box2.coarse.msh
# More typical level of loading for performance metrics
overset_grids  sphere_hex.msh  box2.msh
overset_grid_type  1  0

# =============================================================
# Boundary Conditions
# =============================================================
mesh_bound  char    char
mesh_bound  overset overset
mesh_bound  fluid   fluid
# Inviscied slip wall:
#mesh_bound  sphere  wall_slip
# Viscous wall bc:
mesh_bound  sphere  wall_ns_adi

# =============================================================
# Basic Options
# =============================================================
# Solver:
equation  EulerNS    (AdvDiff, EulerNS)
order     2
viscous   1
motion    0

# Timestepping:
n_steps    1000
dt_scheme  LSRK      (Euler, RK44, RK54, LSRK (adaptive), RKj)
res_tol    1e-11
dt_type    0         (0 = Supplied, 1 = Global, 2 = Local)
dt	   0.0002
CFL	   .2

# Restarting:
restart      0
restart_type 2
restart_case Sphere
restart_iter 5

# =============================================================
# Plotting/Output Options
# =============================================================
# Note: You can suppress output by setting freq to zero. 
output_prefix   Sphere
write_freq      100
plot_surfaces   0
plot_overset    0
write_pyfr      1
write_paraview  1
write_tavg_freq 500
tavg_freq       50
report_freq     100
res_type        1
force_freq      0
error_freq      0
nQpts1D         0

# ====================================================
# Moving-Grid Parameters
# ====================================================
# 4: Figure-8-ish periodic motion
# For 'Ping-Pong' Taylor-Green: inner box [-.4*pi, +.4*pi]
# outer box [-pi, pi], so max range of motion is .6*pi
#motion_type  4  # presribed periodic circle/figure-8
motion_type  10  # rigid-body translation/rotation: set full_6dof to add force integration
moveAx  1.884955
moveAy  0.9424777
moveAz  1.884955

moveFx  .0591607978
moveFy  .1183215957
moveFz  .0591607978

# Set rotation of inner grid w/o translation
wx0  .05
wy0  .05
wz0  .01
vx0  0.0
vy0  0.0
vz0  0.0

# Object properties:
mass  .2
Ixx  1.e-4
Iyy  1.e-4
Izz  1.e-4
# Initial grid velocity:
vx0  0
vy0  0
vz0  0

# =============================================================
# Initial Condition
# =============================================================
ic_type  0         (0 = Uniform, 1 = Functional (defined in funcs.cpp))

# =============================================================
# Freestream Boundary Conditions [for all freestream/inlet-type boundaries]
# =============================================================
# Euler/Navier-Stokes
T_gas 291.15
gamma 1.4
R     286.9
mu    1.827E-5
prandtl 0.72
S       120

# Euler specific
rho_fs 1.4
u_fs 0.2
v_fs 0.0
w_fs 0.0
P_fs 1

# Navier-Stokes specific
fix_vis 1
mach_fs 0.2
Re_fs 200
L_fs 1
T_fs 300
nx_fs 1
ny_fs 0

# =============================================================
# Numerics Options
# =============================================================
spt_type   Legendre
# Riemann Solver:
fconv_type Rusanov
fvisc_type LDG
rus_k      0.0
ldg_b      0.0
ldg_tau    1.0

# Multigrid:
p_multi 0
mg_cycle V
FMG_vcycles 1000
rel_fac 1.00

mg_levels 2 1 0
mg_steps  2 1 5


